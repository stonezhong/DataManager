"""
Django settings for DataCatalog project.

Generated by 'django-admin startproject' using Django 2.1.15.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import json
import DataCatalog.logging_helper as logging_helper

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

from config import get_mordor_config_json_template, get_log_path, get_mordor_config

__DJANGO_CONFIG   = get_mordor_config_json_template(
    "django.json",
    context = {
        "log_dir": get_log_path()
    }
)
__DB_CONFIG       = get_mordor_config_json_template("db.json")

# config logging
import logging.config
if not logging_helper.logging_initialized:
    logging_helper.logging_initialized = True
    logging.config.dictConfig(__DJANGO_CONFIG['log_config'])

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = __DJANGO_CONFIG['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main.apps.MainConfig',
    'rest_framework',
    'django_filters',
    'explorer.apps.ExplorerConfig',
]

MIDDLEWARE = [
    'DataCatalog.patch_request_middleware.PatchRequestMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DataCatalog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'explorer.processors.environment',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DataCatalog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE'  : 'django.db.backends.mysql',
        'NAME'    : __DB_CONFIG['db_name'],
        'USER'    : __DB_CONFIG['username'],
        'PASSWORD': __DB_CONFIG['password'],
        'HOST'    : __DB_CONFIG['server'],
        'PORT'    : __DB_CONFIG.get('port', 3306),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    # 'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    # 'DATETIME_INPUT_FORMATS': ['%Y-%m-%d %H:%M:%S'],

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20
}

###################################
# Data Manager Specific Settings  #
###################################

###################################################################################
# For external user to access airflow, the url could be different, it depends
# on how your proxy (such as nginx) is configured and port mapping config
# Let's make it configurable
# AIRFLOW_BASE_URL = "http://lab04.deepspace.local:60010"   # do not ending with slash
###################################################################################
AIRFLOW_BASE_URL = __DJANGO_CONFIG['airflow']['base_url']

# AIRFLOW Virtual Environment Location
AIRFLOW_VENV = "/root/.venvs/airflow"
# AIRFLOW REST API URL, need to be accessible from the web server
AIRFLOW_API_BASE_URL = f"{AIRFLOW_BASE_URL}/api/experimental"
